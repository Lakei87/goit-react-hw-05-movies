{"version":3,"file":"static/js/685.c57eb12a.chunk.js","mappings":"+PAAaA,EAAmB,SAAAC,GAC5B,OAAOA,EAAOC,KAAI,SAAAC,GAAS,OAAIA,EAAUC,IAAd,IAAoBC,KAAK,KACvD,E,SCKc,SAASC,IAAgB,IAAD,IACnC,GAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAON,EAAP,KAAeS,EAAf,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GACFE,GAAWC,EAAAA,EAAAA,MAgBjB,OAfAC,QAAQC,IAAIR,IAEZS,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAU,mCAAG,8GAEYC,EAAAA,EAAAA,IAAaR,GAFzB,OAELS,EAFK,OAGXX,EAASW,GACTV,EAAUV,EAAiBoB,EAASnB,SAJzB,gDAMXc,QAAQC,IAAR,MANW,yDAAH,qDAShBE,GACH,GAAE,CAACP,KAGA,UAAC,KAAD,CAAKU,GAAG,OAAOC,EAAG,EAAlB,WACI,SAAC,KAAD,IACCd,IACG,SAAC,KAAD,CACIP,OAAQA,EACRsB,OAAQf,EAAMgB,YACdC,MAAOjB,EAAMiB,MACbC,KAAMlB,EAAMmB,aAAaC,MAAM,EAAE,GACjCC,KAAMrB,EAAMsB,aACZC,SAAUvB,EAAMuB,YAGxB,SAAC,KAAD,CAAgBlB,SAAQ,oBAAEA,EAASmB,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,OAClD,SAAC,EAAAC,SAAD,CAAUC,UAAU,uCAApB,UACI,SAAC,KAAD,QAIf,C,8LC5CKC,EAAW,+BACXC,EAAU,2CAET,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAyBC,GAAzB,gFACGC,EADH,UACYJ,EADZ,yBACqCC,EADrC,kBACsDE,EADtD,4BAEoBE,EAAAA,EAAAA,IAAUD,GAF9B,cAEGpB,EAFH,yBAGIA,EAASsB,MAHb,kEAMA,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6FACGH,EADH,UACYJ,EADZ,+BAC2CC,GAD3C,SAEoBI,EAAAA,EAAAA,IAAUD,GAF9B,cAEGpB,EAFH,yBAGIA,EAASsB,MAHb,kEAMA,SAAevB,EAAtB,+CAAO,OAAP,oBAAO,WAA4BR,GAA5B,gFACG6B,EADH,UACYJ,EADZ,kBAC8BzB,EAD9B,YACoC0B,EADpC,4BAEoBI,EAAAA,EAAAA,IAAUD,GAF9B,cAEGpB,EAFH,yBAGIA,EAASsB,MAHb,kEAMA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAA0BjC,GAA1B,gFACG6B,EADH,UACYJ,EADZ,kBAC8BzB,EAD9B,oBAC4C0B,EAD5C,4BAEoBI,EAAAA,EAAAA,IAAUD,GAF9B,cAEGpB,EAFH,yBAGIA,EAASsB,MAHb,kEAMA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA0BlC,GAA1B,gFACG6B,EADH,UACYJ,EADZ,kBAC8BzB,EAD9B,oBAC4C0B,EAD5C,4BAEoBI,EAAAA,EAAAA,IAAUD,GAF9B,cAEGpB,EAFH,yBAGIA,EAASsB,MAHb,kE","sources":["helpers/createGenresList.js","pages/MovieDetails/index.jsx","services/moviesApi.js"],"sourcesContent":["export const createGenresList = genres => {\n    return genres.map(genreItem => genreItem.name).join(', ');\n};","import { Suspense, useEffect, useState } from \"react\";\nimport { useParams, Outlet, useLocation } from \"react-router-dom\";\nimport { GoBackLink, AdditionalInfo, Box, MovieInfo } from \"components\";\nimport { getMovieByID } from \"services/moviesApi\";\nimport { createGenresList } from \"helpers/createGenresList\";\n\n\nexport default function MovieDetails() {\n    const [movie, setMovie] = useState(null);\n    const [genres, setGenres] = useState([]);\n    const { id } = useParams();\n    const location = useLocation();\n    console.log(movie)\n\n    useEffect(() => {\n        const fetchMovie = async () => {\n            try {\n                const responce = await getMovieByID(id);\n                setMovie(responce);\n                setGenres(createGenresList(responce.genres));\n            } catch (error) {\n                console.log(error);\n            }\n        };\n        fetchMovie();\n    }, [id]);\n    \n    return (\n        <Box as='main' p={4}>\n            <GoBackLink />\n            {movie &&\n                <MovieInfo\n                    genres={genres}\n                    poster={movie.poster_path}\n                    title={movie.title}\n                    date={movie.release_date.slice(0,4)}\n                    vote={movie.vote_average}\n                    overview={movie.overview}\n                />\n            }\n            <AdditionalInfo location={location.state?.from ?? '/'} />\n            <Suspense fallback={<div>Loading..</div>}>\n                <Outlet/>\n            </Suspense>\n        </Box>\n    );\n};","import axios from \"axios\";\n\nconst BASE_URL = \"https://api.themoviedb.org/3\";\nconst API_KEY = \"api_key=5f364d2fc6b25c805674b50a1c63d59e\";\n\nexport async function getMovies(query) {\n    const url = `${BASE_URL}/search/movie?${API_KEY}&query=${query}&language=en-US`;\n    const responce = await axios.get(url);\n    return responce.data;\n}\n\nexport async function getTrending() {\n    const url = `${BASE_URL}/trending/movie/day?${API_KEY}`;\n    const responce = await axios.get(url);\n    return responce.data;\n};\n\nexport async function getMovieByID(id) {\n    const url = `${BASE_URL}/movie/${id}?${API_KEY}&language=en-US`;\n    const responce = await axios.get(url);\n    return responce.data;\n};\n\nexport async function getCredits(id) {\n    const url = `${BASE_URL}/movie/${id}/credits?${API_KEY}&language=en-US`;\n    const responce = await axios.get(url);\n    return responce.data;\n};\n\nexport async function getReviews(id) {\n    const url = `${BASE_URL}/movie/${id}/reviews?${API_KEY}&language=en-US`;\n    const responce = await axios.get(url);\n    return responce.data;\n};"],"names":["createGenresList","genres","map","genreItem","name","join","MovieDetails","useState","movie","setMovie","setGenres","id","useParams","location","useLocation","console","log","useEffect","fetchMovie","getMovieByID","responce","as","p","poster","poster_path","title","date","release_date","slice","vote","vote_average","overview","state","from","Suspense","fallback","BASE_URL","API_KEY","getMovies","query","url","axios","data","getTrending","getCredits","getReviews"],"sourceRoot":""}