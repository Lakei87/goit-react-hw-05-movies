{"version":3,"file":"static/js/134.2510fd89.chunk.js","mappings":"wQAKe,SAASA,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAiBF,EAAaG,IAAI,UAExCC,EAAAA,EAAAA,YAAU,WACR,GAAKF,EAAL,CAEA,IAAMG,EAAW,mCAAG,8GAEOC,EAAAA,EAAAA,IAAUJ,GAFjB,OAEVK,EAFU,OAGhBT,EAAUS,EAASC,SAHH,gDAKhBC,QAAQC,IAAR,MALgB,iEAAH,qDASjBL,GAX2B,CAY5B,GAAE,CAACH,IAOJ,OACE,UAAC,KAAD,CAAKS,GAAG,OAAOC,EAAG,EAAlB,WACE,SAAC,KAAD,CAAWC,SAPW,SAACC,GAEzBb,EAD4B,KAATa,EAAc,CAAEC,MAAOD,GAAS,CAAC,EAErD,IAKIjB,IAAU,SAAC,KAAD,CAAYA,OAAQA,MAGpC,C,8LClCKmB,EAAW,+BACXC,EAAU,2CAET,SAAeX,EAAtB,+CAAO,OAAP,oBAAO,WAAyBS,GAAzB,gFACGG,EADH,UACYF,EADZ,yBACqCC,EADrC,kBACsDF,EADtD,4BAEoBI,EAAAA,EAAAA,IAAUD,GAF9B,cAEGX,EAFH,yBAGIA,EAASa,MAHb,kEAMA,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6FACGH,EADH,UACYF,EADZ,+BAC2CC,GAD3C,SAEoBE,EAAAA,EAAAA,IAAUD,GAF9B,cAEGX,EAFH,yBAGIA,EAASa,MAHb,kEAMA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,gFACGL,EADH,UACYF,EADZ,kBAC8BO,EAD9B,YACoCN,EADpC,4BAEoBE,EAAAA,EAAAA,IAAUD,GAF9B,cAEGX,EAFH,yBAGIA,EAASa,MAHb,kEAMA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA0BD,GAA1B,gFACGL,EADH,UACYF,EADZ,kBAC8BO,EAD9B,oBAC4CN,EAD5C,4BAEoBE,EAAAA,EAAAA,IAAUD,GAF9B,cAEGX,EAFH,yBAGIA,EAASa,MAHb,kEAMA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA0BF,GAA1B,gFACGL,EADH,UACYF,EADZ,kBAC8BO,EAD9B,oBAC4CN,EAD5C,4BAEoBE,EAAAA,EAAAA,IAAUD,GAF9B,cAEGX,EAFH,yBAGIA,EAASa,MAHb,kE","sources":["pages/Movies.jsx","services/moviesApi.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { Box, MoviesList, SearchBox } from 'components';\nimport { getMovies } from 'services/moviesApi';\n\nexport default function Movies() {\n  const [movies, setMovies] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const updSearchQuery = searchParams.get('query');\n\n  useEffect(() => {\n    if (!updSearchQuery) return;\n\n    const fetchMovies = async () => {\n      try {\n        const responce = await getMovies(updSearchQuery);\n        setMovies(responce.results);\n      } catch (error) {\n        console.log(error);\n      };\n    };\n    \n    fetchMovies();\n  }, [updSearchQuery]);\n\n  const updateQueryString = (name) => {\n    const nextParams = name !== \"\" ? { query: name } : {};\n    setSearchParams(nextParams);\n  };\n\n  return (\n    <Box as='main' p={4}>\n      <SearchBox onSubmit={updateQueryString} />\n      {movies && <MoviesList movies={movies}/>}\n    </Box>\n  );\n};\n","import axios from \"axios\";\n\nconst BASE_URL = \"https://api.themoviedb.org/3\";\nconst API_KEY = \"api_key=5f364d2fc6b25c805674b50a1c63d59e\";\n\nexport async function getMovies(query) {\n    const url = `${BASE_URL}/search/movie?${API_KEY}&query=${query}&language=en-US`;\n    const responce = await axios.get(url);\n    return responce.data;\n}\n\nexport async function getTrending() {\n    const url = `${BASE_URL}/trending/movie/day?${API_KEY}`;\n    const responce = await axios.get(url);\n    return responce.data;\n};\n\nexport async function getMovieByID(id) {\n    const url = `${BASE_URL}/movie/${id}?${API_KEY}&language=en-US`;\n    const responce = await axios.get(url);\n    return responce.data;\n};\n\nexport async function getCredits(id) {\n    const url = `${BASE_URL}/movie/${id}/credits?${API_KEY}&language=en-US`;\n    const responce = await axios.get(url);\n    return responce.data;\n};\n\nexport async function getReviews(id) {\n    const url = `${BASE_URL}/movie/${id}/reviews?${API_KEY}&language=en-US`;\n    const responce = await axios.get(url);\n    return responce.data;\n};"],"names":["Movies","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","updSearchQuery","get","useEffect","fetchMovies","getMovies","responce","results","console","log","as","p","onSubmit","name","query","BASE_URL","API_KEY","url","axios","data","getTrending","getMovieByID","id","getCredits","getReviews"],"sourceRoot":""}