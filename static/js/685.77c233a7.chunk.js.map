{"version":3,"file":"static/js/685.77c233a7.chunk.js","mappings":"+PAAaA,EAAmB,SAAAC,GAC5B,OAAOA,EAAOC,KAAI,SAAAC,GAAS,OAAIA,EAAUC,IAAd,IAAoBC,KAAK,KACvD,E,SCKc,SAASC,IAAgB,IAAD,IACnC,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAON,EAAP,KAAeS,EAAf,KACOC,EAA6DH,EAA7DG,YAAaC,EAAgDJ,EAAhDI,MAAOC,EAAyCL,EAAzCK,aAAcC,EAA2BN,EAA3BM,aAAcC,EAAaP,EAAbO,SAC/CC,GAAOC,EAAAA,EAAAA,MAAPD,GACFE,GAAWC,EAAAA,EAAAA,MAejB,OAbAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAU,mCAAG,8GAEYC,EAAAA,EAAAA,IAAaN,GAFzB,OAELO,EAFK,OAGXd,EAASc,GACTb,EAAUV,EAAiBuB,EAAStB,SAJzB,gDAMXuB,QAAQC,IAAR,MANW,yDAAH,qDAShBJ,GACH,GAAE,CAACL,KAGA,UAAC,KAAD,CAAKU,GAAG,OAAOC,EAAG,EAAlB,WACI,SAAC,KAAD,KACA,SAAC,KAAD,CACI1B,OAAQA,EACR2B,OAAQjB,EACRC,MAAOA,EACPiB,KAAMhB,EACNiB,KAAMhB,EACNC,SAAUA,KAEd,SAAC,KAAD,CAAgBG,SAAQ,oBAAEA,EAASa,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,OAClD,SAAC,EAAAC,SAAD,CAAUC,UAAU,uCAApB,UACI,SAAC,KAAD,QAIf,C,8LC1CKC,EAAW,+BACXC,EAAU,2CAET,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAyBC,GAAzB,gFACGC,EADH,UACYJ,EADZ,yBACqCC,EADrC,kBACsDE,EADtD,4BAEoBE,EAAAA,EAAAA,IAAUD,GAF9B,cAEGhB,EAFH,yBAGIA,EAASkB,MAHb,kEAMA,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6FACGH,EADH,UACYJ,EADZ,+BAC2CC,GAD3C,SAEoBI,EAAAA,EAAAA,IAAUD,GAF9B,cAEGhB,EAFH,yBAGIA,EAASkB,MAHb,kEAMA,SAAenB,EAAtB,+CAAO,OAAP,oBAAO,WAA4BN,GAA5B,gFACGuB,EADH,UACYJ,EADZ,kBAC8BnB,EAD9B,YACoCoB,EADpC,4BAEoBI,EAAAA,EAAAA,IAAUD,GAF9B,cAEGhB,EAFH,yBAGIA,EAASkB,MAHb,kEAMA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAA0B3B,GAA1B,gFACGuB,EADH,UACYJ,EADZ,kBAC8BnB,EAD9B,oBAC4CoB,EAD5C,4BAEoBI,EAAAA,EAAAA,IAAUD,GAF9B,cAEGhB,EAFH,yBAGIA,EAASkB,MAHb,kEAMA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA0B5B,GAA1B,gFACGuB,EADH,UACYJ,EADZ,kBAC8BnB,EAD9B,oBAC4CoB,EAD5C,4BAEoBI,EAAAA,EAAAA,IAAUD,GAF9B,cAEGhB,EAFH,yBAGIA,EAASkB,MAHb,kE","sources":["helpers/createGenresList.js","pages/MovieDetails/index.jsx","services/moviesApi.js"],"sourcesContent":["export const createGenresList = genres => {\n    return genres.map(genreItem => genreItem.name).join(', ');\n};","import { Suspense, useEffect, useState } from \"react\";\nimport { useParams, Outlet, useLocation } from \"react-router-dom\";\nimport { GoBackLink, AdditionalInfo, Box, MovieInfo } from \"components\";\nimport { getMovieByID } from \"services/moviesApi\";\nimport { createGenresList } from \"helpers/createGenresList\";\n\n\nexport default function MovieDetails() {\n    const [movie, setMovie] = useState([]);\n    const [genres, setGenres] = useState([]);\n    const {poster_path, title, release_date, vote_average, overview } = movie;\n    const { id } = useParams();\n    const location = useLocation();\n\n    useEffect(() => { \n        const fetchMovie = async () => {\n            try {\n                const responce = await getMovieByID(id);\n                setMovie(responce);\n                setGenres(createGenresList(responce.genres));\n            } catch (error) {\n                console.log(error);\n            }\n        };\n        fetchMovie();\n    }, [id]);\n    \n    return (\n        <Box as='main' p={4}>\n            <GoBackLink />\n            <MovieInfo\n                genres={genres}\n                poster={poster_path}\n                title={title}\n                date={release_date}\n                vote={vote_average}\n                overview={overview}\n            />\n            <AdditionalInfo location={location.state?.from ?? '/'} />\n            <Suspense fallback={<div>Loading..</div>}>\n                <Outlet/>\n            </Suspense>\n        </Box>\n    );\n};","import axios from \"axios\";\n\nconst BASE_URL = \"https://api.themoviedb.org/3\";\nconst API_KEY = \"api_key=5f364d2fc6b25c805674b50a1c63d59e\";\n\nexport async function getMovies(query) {\n    const url = `${BASE_URL}/search/movie?${API_KEY}&query=${query}&language=en-US`;\n    const responce = await axios.get(url);\n    return responce.data;\n}\n\nexport async function getTrending() {\n    const url = `${BASE_URL}/trending/movie/day?${API_KEY}`;\n    const responce = await axios.get(url);\n    return responce.data;\n};\n\nexport async function getMovieByID(id) {\n    const url = `${BASE_URL}/movie/${id}?${API_KEY}&language=en-US`;\n    const responce = await axios.get(url);\n    return responce.data;\n};\n\nexport async function getCredits(id) {\n    const url = `${BASE_URL}/movie/${id}/credits?${API_KEY}&language=en-US`;\n    const responce = await axios.get(url);\n    return responce.data;\n};\n\nexport async function getReviews(id) {\n    const url = `${BASE_URL}/movie/${id}/reviews?${API_KEY}&language=en-US`;\n    const responce = await axios.get(url);\n    return responce.data;\n};"],"names":["createGenresList","genres","map","genreItem","name","join","MovieDetails","useState","movie","setMovie","setGenres","poster_path","title","release_date","vote_average","overview","id","useParams","location","useLocation","useEffect","fetchMovie","getMovieByID","responce","console","log","as","p","poster","date","vote","state","from","Suspense","fallback","BASE_URL","API_KEY","getMovies","query","url","axios","data","getTrending","getCredits","getReviews"],"sourceRoot":""}